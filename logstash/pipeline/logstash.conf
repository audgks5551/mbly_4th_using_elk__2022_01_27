input {
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jar/jdbc/mysql-connector-java-5.1.48.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://10.41.9.194:3306/waiting_2022_01_11"
    jdbc_user => "myunghan"
    jdbc_password => "yurim1115!"
    jdbc_paging_enabled => true
    tracking_column => "unix_ts_in_secs2"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* * * * *"
    statement => "
        SELECT 
          stores_store.id,
          stores_store.name,
          stores_store.address,
          stores_store.phone_number,
          stores_store.updated,
          stores_storetype.name AS storetype,
          stores_foodtype.name AS foodtype,
          stores_menu.name AS menu,
          group_concat(distinct stores_amenity.name separator ' ') AS amenity,
	        group_concat(distinct stores_theme.name separator ' ') AS theme,
	        group_concat(distinct stores_taste.name separator ' ') AS taste,
          UNIX_TIMESTAMP(stores_store.updated) AS unix_ts_in_secs2 
        FROM 
	        stores_store 
        LEFT JOIN stores_storetype ON stores_storetype.id = stores_store.store_type_id
        LEFT JOIN stores_foodtype ON stores_foodtype.id = stores_store.food_type_id
        LEFT JOIN stores_menu ON stores_menu.id = stores_store.menu_id
        LEFT JOIN stores_store_amenities ON stores_store_amenities.store_id = stores_store.id
        LEFT JOIN stores_amenity ON stores_amenity.id = stores_store_amenities.amenity_id
        LEFT JOIN stores_store_themes ON stores_store_themes.store_id = stores_store.id
        LEFT JOIN stores_theme ON stores_theme.id = stores_store_themes.theme_id
        LEFT JOIN stores_store_tastes ON stores_store_tastes.store_id = stores_store.id
        LEFT JOIN stores_taste ON stores_taste.id = stores_store_tastes.taste_id
        WHERE (UNIX_TIMESTAMP(stores_store.updated) > :sql_last_value AND stores_store.updated < NOW()) 
        group by stores_store.id
        ORDER BY stores_store.updated ASC"
    type => "v2"
  }
}

filter {
  mutate {
        split => { "amenity" => " "}
        split => { "theme" => " "}
        split => { "taste" => " "}
        split => { "foodtype" => "/"}
    }
}

output {
  if [type] == "v2" {
    elasticsearch {
      hosts => "elasticsearch:9200"
      user => "elastic"
      password => "elasticpassword"
      index => "waiting_2022_01_11__stores_store__v1"
      document_id => "%{id}"
    }
  }
}